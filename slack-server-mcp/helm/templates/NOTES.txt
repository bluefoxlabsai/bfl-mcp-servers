Slack MCP Server has been installed successfully!

{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
1. Get the application URL by running these commands:
{{- if $.Values.ingress.tls }}
  https://{{ $host.host }}{{ .path }}
{{- else }}
  http://{{ $host.host }}{{ .path }}
{{- end }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "slack-server-mcp.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "slack-server-mcp.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "slack-server-mcp.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.mcp.server.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "slack-server-mcp.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Configure your MCP client to connect to the Slack MCP Server:
   - Endpoint: http://{{ include "slack-server-mcp.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.mcp.server.port }}
   - Available tools: post_message, search_messages, add_reaction, get_channel_info, get_user_info, list_channels, list_users, get_thread_replies, create_channel

3. Ensure your Slack tokens are properly configured:
   - Bot Token: Required for most operations
   - User Token: Required for user-specific operations like posting as a user

For more information, visit the Slack MCP Server documentation.