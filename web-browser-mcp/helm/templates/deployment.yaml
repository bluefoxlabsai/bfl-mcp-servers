apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web-browser-mcp.fullname" . }}
  labels:
    {{- include "web-browser-mcp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "web-browser-mcp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "web-browser-mcp.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "web-browser-mcp.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.mcp.server.port }}
              protocol: TCP
          env:
            - name: PYTHONPATH
              value: "/app"
            - name: TRANSPORT
              value: {{ .Values.mcp.transport | quote }}
            - name: HOST
              value: {{ .Values.mcp.server.host | quote }}
            - name: PORT
              value: {{ .Values.mcp.server.port | quote }}
          livenessProbe:
            {{- if .Values.livenessProbe.enabled }}
            {{- with .Values.livenessProbe }}
            {{- if .httpGet }}
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
            {{- else if .tcpSocket }}
            tcpSocket:
              port: {{ .tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            {{- if .timeoutSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            {{- end }}
            {{- if .failureThreshold }}
            failureThreshold: {{ .failureThreshold }}
            {{- end }}
            {{- if .successThreshold }}
            successThreshold: {{ .successThreshold }}
            {{- end }}
            {{- end }}
            {{- end }}
          readinessProbe:
            {{- if .Values.readinessProbe.enabled }}
            {{- with .Values.readinessProbe }}
            {{- if .httpGet }}
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
            {{- else if .tcpSocket }}
            tcpSocket:
              port: {{ .tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            {{- if .timeoutSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            {{- end }}
            {{- if .failureThreshold }}
            failureThreshold: {{ .failureThreshold }}
            {{- end }}
            {{- if .successThreshold }}
            successThreshold: {{ .successThreshold }}
            {{- end }}
            {{- end }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}