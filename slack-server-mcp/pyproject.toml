[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "slack-mcp-server"
version = "0.1.5"
description = "A Slack MCP server built with FastMCP"
authors = [
    {name = "Blue Fox Labs AI", email = "info@bluefoxlabs.ai"},
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
keywords = ["mcp", "slack", "fastmcp", "uv"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastmcp>=0.4.0",
    "slack-sdk>=3.27.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "uvicorn>=0.27.0",
    "click>=8.0.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
examples = [
    "aiohttp>=3.8.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "aiohttp>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/bluefoxlabsai/bfl-mcp-servers"
Repository = "https://github.com/bluefoxlabsai/bfl-mcp-servers"
Issues = "https://github.com/bluefoxlabsai/bfl-mcp-servers/issues"

[project.scripts]
slack-mcp-server = "slack_mcp_server.server:main"

[tool.hatch.build.targets.wheel]
packages = ["slack_mcp_server"]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"