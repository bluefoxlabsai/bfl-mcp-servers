1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if eq (include "accuweather-mcp.serviceEnabled" .) "true" }}
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "accuweather-mcp.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "accuweather-mcp.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "accuweather-mcp.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "accuweather-mcp.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
{{- else }}
{{- if eq .Values.mcp.transport "stdio" }}

üéâ AccuWeather MCP Server has been deployed in STDIO mode!

To connect to the server, use kubectl exec:

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "accuweather-mcp.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  
  # Connect via kubectl exec
  kubectl exec --namespace {{ .Release.Namespace }} -it $POD_NAME -- uv run mcp-accuweather

Available AccuWeather MCP Tools:
  ‚Ä¢ search_locations           - Search for locations by name, postal code, or coordinates
  ‚Ä¢ get_current_weather        - Get current weather conditions
  ‚Ä¢ get_daily_forecast         - Get multi-day weather forecast
  ‚Ä¢ get_hourly_forecast        - Get hourly weather forecast
  ‚Ä¢ get_weather_alerts         - Get active weather alerts and warnings
  ‚Ä¢ get_location_by_coordinates - Find location by latitude/longitude
  ‚Ä¢ get_historical_weather     - Get historical weather data

{{- else if eq .Values.mcp.transport "sse" }}

üéâ AccuWeather MCP Server has been deployed in SSE mode!

The server is running with Server-Sent Events transport.
MCP endpoint available at: /sse
Health check endpoint: /health

{{- else }}

üéâ AccuWeather MCP Server has been deployed in HTTP mode!
{{- end }}
{{- end }}

Configuration:
  Transport: {{ .Values.mcp.transport }}
  {{- if .Values.accuweather.apiKey }}
  API Key: configured
  {{- else }}
  API Key: ‚ö†Ô∏è  not configured - set accuweather.apiKey
  {{- end }}

For more information and examples, visit:
https://github.com/bluefoxlabsai/bfl-mcp-servers/tree/main/accuweather-mcp